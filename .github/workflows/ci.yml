name: project_template CI

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.os }}-${{ matrix.build_type }}-${{ matrix.toolchain }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        build_type: [Debug, Release]
        toolchain: [gcc_libstdcxx, clang_libstdcxx, clang_libcxx]
        clang_tidy: [On]
        clang_tidy_path: [/usr/bin/clang-tidy]
    steps:
      - name: Install tools
        id: install_tools
        run: |
          sudo wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
          sudo apt-add-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal main'
          sudo apt-get update
          sudo apt-get remove -y .*clang.* .*llvm.* .*gcc.*
          sudo apt-get autoremove -y
          sudo apt-get install -y  \
            clang                  \
            clang-format           \
            clang-tidy             \
            clang-tools            \
            cmake                  \
            g++-11                 \
            gcc-11                 \
            libc++-14-dev          \
            libc++abi-14-dev       \
            libclang-14-dev        \
            libclang-common-14-dev \
            libfuzzer-14-dev       \
            libunwind-14-dev       \
            lld                    \
            llvm-dev               \
            ninja-build            \
            python3-clang
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 100
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 100
          clang --version

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Formatting
        id: git_clang_format
        run: git-clang-format
          --style=file
          --extensions c,cc,cpp,cxx,h,hh,hpp,hxx
          --diff origin/main HEAD

      - name: Configure
        id: configure
        run: |
          cmake . -G Ninja                                                                     \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}                                        \
            -DCMAKE_TOOLCHAIN_FILE=`pwd`/config/cmake/toolchains/${{ matrix.toolchain }}.cmake \
            -DCONSTEXPR_CONTRACTS_ENABLE_CLANG_TIDY=On                                         \
            -DCONSTEXPR_CONTRACTS_CLANG_TIDY_PATH=${{ matrix.clang_tidy_path }}

      - name: Build
        id: build
        run: ninja

      - name: Test
        id: test
        run: ctest -j$(nproc) --output-on-failure
